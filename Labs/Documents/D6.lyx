#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{fancyhdr}%The first page setting
\fancypagestyle{plain}
{%
  \fancyhf{} % clear all header and footer fields
  \fancyhead[L]{
    LINK\"OPING UNIVERSITY\\
    Avdelningen för Statistik\\
    Institutionen för datavetenskap
  }
  \fancyhead[R]{Surveymetodik}
}
%The remaining pages

\fancyhead[RO,LE]{}
\fancyhead[C]{Surveymetodik}
\fancyhead[LO,RE]{}

 
\end_preamble
\use_default_options false
\begin_modules
knitr
\end_modules
\maintain_unincluded_children false
\language swedish
\language_package auto
\inputencoding auto
\fontencoding default
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plainnat
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Datorlaboration 6
\end_layout

\begin_layout Author
Måns Magnusson
\end_layout

\begin_layout Date
VT 2015
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "Intro.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<prompt=TRUE,eval=TRUE,echo=FALSE>>=
\end_layout

\begin_layout Plain Layout

.Options$width <- 60
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Förberedelser
\end_layout

\begin_layout Subsection
Läsa in paket som ska användas
\end_layout

\begin_layout Standard
Som ett första steg behöver vi installera en hel del paket som kan hantera
 och arbeta med spatiala datastrukturer.
 Vi kommer därför behöva den grundläggande funktionaliteten i följande R-paket:
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Paket
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Innehåll
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
maptools
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Verktyg för att använda och läsa in spatiala data
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
rgeos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kopplingar från R till GEOS (
\series bold
G
\series default
eometry 
\series bold
e
\series default
ngine 
\series bold
o
\series default
pen 
\series bold
s
\series default
ource)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
rgdal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Verktyg för att konvertera mellan projektioner
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
ggmap
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Spatial visualisering med google maps och opens street map.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
sp
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Klasser och metoder för spatiala datastrukturer
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
När det gäller paketen 
\family typewriter
rgeos
\family default
 och 
\family typewriter
rgdal
\family default
 bygger dessa paket dessutom på andra implementationer i språk som Java
 och C++.
 Det kan göra det något mer krångligt att installera dessa paket i vissa
 fall.
 För att installera dessa paket på Mac OS kan jag rekommendera 
\series bold
\color blue

\begin_inset CommandInset href
LatexCommand href
name "[denna]"
target "http://spatialanalysis.co.uk/2010/11/installing-rgdal-on-mac-os-x/"

\end_inset


\series default
\color inherit
 och 
\series bold
\color blue

\begin_inset CommandInset href
LatexCommand href
name "[denna]"
target "http://tlocoh.r-forge.r-project.org/mac_rgeos_rgdal.html"

\end_inset


\series default
\color inherit
 guide för installation.
\end_layout

\begin_layout Itemize
Läs dessutom in följande paket i R:
\begin_inset CommandInset citation
LatexCommand nocite
key "Lumley2010csa"

\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=TRUE,message=FALSE,warning=FALSE,eval=TRUE>>=
\end_layout

\begin_layout Plain Layout

library(survey)
\end_layout

\begin_layout Plain Layout

library(rmeta)
\end_layout

\begin_layout Plain Layout

library(hexbin)
\end_layout

\begin_layout Plain Layout

library(ggplot2)
\end_layout

\begin_layout Plain Layout

library(pxweb)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Om det inte går att läsa in paketet (ex.
 du har en egen dator) behöver du installera paketet först.
 Det kräver internetanslutning och då använder du exempelvis följande kod.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=TRUE,message=FALSE,warning=FALSE,eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

install.packages("survey")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Ladda ned och läs in Survey 2010
\begin_inset CommandInset label
LatexCommand label
name "sub:Ladda-ned-och"

\end_inset


\end_layout

\begin_layout Itemize
Vi har fått tillgång till det datamaterial som ligger till grund för boken
 
\shape italic
Den svenska väljaren
\shape default
 
\begin_inset CommandInset citation
LatexCommand citet
key "2011dsv"

\end_inset

.
 Ett mindre urval av variablerna i studien har sparats som en R-fil.
 Ladda ned filen från kurshemsidan och läs in den i R med följande funktion
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=TRUE,message=FALSE,warning=FALSE,eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

load("svy2010.Rdata")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Det går också att ladda in filen direkt från webben med 
\family typewriter
repmis
\family default
-paketet:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=TRUE, eval=TRUE>>=
\end_layout

\begin_layout Plain Layout

library(repmis)
\end_layout

\begin_layout Plain Layout

data_path <- "https://raw.github.com/MansMeg/KursSvyMeth/master/Labs/DataFiles/svy
2010.Rdata"
\end_layout

\begin_layout Plain Layout

source_data(data_path)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Du ska nu ha läst in en fil med 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{nrow(svy2010)}
\end_layout

\end_inset

 observationer och 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Sexpr{ncol(svy2010)}
\end_layout

\end_inset

 variabler.
 Information om respektive variabler finns i dokumentet 
\series bold
KodbokSurvey2010.pdf
\series default
 som finns på samma ställe som datamaterialet, dock finns inte alla variabler
 med i datasetet.
\end_layout

\begin_layout Itemize
Vi ska nu skapa två kontinuerliga variabler i datasetet 
\family typewriter
fathAge
\family default
 och 
\family typewriter
mothAge
\family default
 på följande sätt:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=TRUE, eval=TRUE>>=
\end_layout

\begin_layout Plain Layout

svy2010$fathAge <- svy2010$FR37 - svy2010$FR40_1 
\end_layout

\begin_layout Plain Layout

svy2010$fathAge[abs(svy2010$fathAge) > 100 | svy2010$fathAge < 0 ] <- NA
 
\end_layout

\begin_layout Plain Layout

svy2010$mothAge <- svy2010$FR37 - svy2010$FR40_2 
\end_layout

\begin_layout Plain Layout

svy2010$mothAge[abs(svy2010$mothAge) > 100 | svy2010$mothAge < 0] <- NA
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Ladda ned och läs in 
\family typewriter
agpop.dat
\family default
 
\end_layout

\begin_layout Itemize
Ladda ned och läs in 
\family typewriter
agpop.dat
\family default
 i R, vilket kan göras med följande kod:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=TRUE,eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

agpop<-read.table("agpop.dat",header=TRUE,sep=",")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
I detta fall kan vi självklart använda 
\family typewriter
repmis
\family default
-paketet.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=TRUE,eval=TRUE>>=
\end_layout

\begin_layout Plain Layout

agpop <- source_data(url = "https://raw.github.com/MansMeg/KursSvyMeth/master/Labs
/DataFiles/agpop.dat")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Glöm inte bort att ta bort bortfallet för variablerna 
\family typewriter
ACRES92
\family default
 och 
\family typewriter
ACRES87
\family default
 i 
\family typewriter
agpop
\family default
.
 För att ta bort saknade värden kan följande kod användas:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=TRUE,eval=TRUE>>=
\end_layout

\begin_layout Plain Layout

agpop<-agpop[agpop$ACRES92>0 & agpop$ACRES87>0,]
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Kartfiler
\end_layout

\begin_layout Standard
I denna laboration behöver vi också ladda ned spatiala data vi ska använda
 oss av.
 Detta är exempel på svenska data över Sveriges läns- och kommunindelning
 i form av shape-fil.
 Vi laddar ned dessa shapefiler med paketet 
\family typewriter
downloader
\family default
 (filen finns också på kurshemsidan för manuell nedladdning).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

library(downloader)
\end_layout

\begin_layout Plain Layout

# Counties
\end_layout

\begin_layout Plain Layout

lan_remote <- "https://raw.github.com/MansMeg/KursSvyMeth/master/Labs/DataFiles/La
n_SCB.zip"
\end_layout

\begin_layout Plain Layout

lan_local <- "Lan_SCB.zip"
\end_layout

\begin_layout Plain Layout

download(lan_remote, destfile = lan_local)
\end_layout

\begin_layout Plain Layout

unzip(lan_local)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Municipalities 
\end_layout

\begin_layout Plain Layout

kommuner_remote <- "https://raw.github.com/MansMeg/KursSvyMeth/master/Labs/DataFil
es/Kommun_SCB.zip"
\end_layout

\begin_layout Plain Layout

kommuner_local <- "Kommun_SCB.zip"
\end_layout

\begin_layout Plain Layout

download(kommuner_remote, destfile = kommuner_local)
\end_layout

\begin_layout Plain Layout

unzip(kommuner_local)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section
Grafik
\begin_inset CommandInset label
LatexCommand label
name "sec:Grafik"

\end_inset


\end_layout

\begin_layout Standard
Vi ska nu skapa grafik baserat på surveydata.
 Eftersom vikter är något som påverkar våra variabler och vår grafik väljer
 vi därför att dels använda en stratifierad urvalsdesign som exempel och
 dels data från Survey 2010.
 Visualisering är en konstform så försök göra din grafik så tilltalade som
 möjligt.
 Använd gärna färger.
\end_layout

\begin_layout Standard
Börja med att skapa de två surveyobjekten vi ska använda, dels baserat på
 
\family typewriter
agpop
\family default
 och dels baserat på Survey 2010.
 
\end_layout

\begin_layout Standard
Dra ett (Neymanallokerat) stratifierat urval från 
\family typewriter
agpop
\family default
 och skapa ett surveyobjekt på samma sätt som gjordes i laboration D4.
 Jag döper mitt objekt till 
\family typewriter
agSTRAT
\family default
.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=FALSE, eval=TRUE>>=
\end_layout

\begin_layout Plain Layout

STRATAindex <- stratsample(agpop$REGION, c("NC"=69,"NE"=7,"S"=122,"W"=102))
 
\end_layout

\begin_layout Plain Layout

agSTRATAdata <- agpop[STRATAindex,]
\end_layout

\begin_layout Plain Layout

fpc.strata<-numeric(300) 
\end_layout

\begin_layout Plain Layout

fpc.strata[agSTRATAdata$REGION=="NC"] <- 1049 
\end_layout

\begin_layout Plain Layout

fpc.strata[agSTRATAdata$REGION=="NE"] <- 209 
\end_layout

\begin_layout Plain Layout

fpc.strata[agSTRATAdata$REGION=="S"] <- 1370 
\end_layout

\begin_layout Plain Layout

fpc.strata[agSTRATAdata$REGION=="W"] <- 414
\end_layout

\begin_layout Plain Layout

agSTRAT <- svydesign(~1, strata=~REGION, fpc=fpc.strata, data=agSTRATAdata)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Skapa sedan ett surveyobjekt baserat på datamaterialet i Survey 2010, jag
 kommer kalla detta objekt 
\family typewriter
svy2010design
\family default
.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=FALSE, eval=TRUE>>=
\end_layout

\begin_layout Plain Layout

fpc.srs<-rep(7529673, nrow(svy2010))
\end_layout

\begin_layout Plain Layout

svy2010design<-svydesign(ids=~1, data=svy2010, fpc=fpc.srs)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Kategoriska variabler
\begin_inset CommandInset label
LatexCommand label
name "sub:Kategoriska-variabler"

\end_inset


\end_layout

\begin_layout Paragraph
a)
\end_layout

\begin_layout Standard
Vi börjar med att producera enklare grafik baserat på surveyresultaten.
 Denna grafik är inte specifik för surveyundersökningar, men nu skapar vi
 grafer baserat på våra skattningar av populationen istället på hur data
 ser ut i vårt urval, d.v.s.
 vi beaktar vikterna i vår grafik.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=TRUE, eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

bys <- svyby(formula=~FARMS92, by=~REGION, design=agSTRAT, FUN=svytotal)
\end_layout

\begin_layout Plain Layout

barplot(bys)
\end_layout

\begin_layout Plain Layout

dotchart(bys)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Vi kan också inkludera både antalet observationer och vår osäkerhet med
 en så kallad 
\family typewriter
forestplot()
\family default
 från 
\family typewriter
rmeta
\family default
-paketet.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=TRUE, eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

labelMatrix <- matrix(rownames(bys), nrow=4) 
\end_layout

\begin_layout Plain Layout

forestplot(labeltext=labelMatrix, 
\end_layout

\begin_layout Plain Layout

		   mean = coef(bys), 
\end_layout

\begin_layout Plain Layout

		   lower= coef(bys) - 1.96 * SE(bys),
\end_layout

\begin_layout Plain Layout

           upper = coef(bys) + 1.96 * SE(bys))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
b)
\end_layout

\begin_layout Standard
Vi ska nu gå in på de mer specifika funktioner som finns för surveydata
 i surveypaketet.
 Exempelvis kan vi använda 
\family typewriter
svyboxplot()
\family default
 för att skapa boxplots för populationen vi vill estimera.
 Funktionen estimerar kvantilerna i populationen och skapar en boxplot baserat
 på dessa estimat.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=TRUE, eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

svyboxplot(ACRES92 ~ REGION, design=agSTRAT)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
På ett liknande sätt fungerar funktionen 
\family typewriter
svyhist()
\family default
 som skapar ett histogram baserat på de viktade observationerna.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=TRUE, eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

svyhist(~ ACRES92, design=agSTRAT)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Scatterplots i surveyer
\begin_inset CommandInset label
LatexCommand label
name "sub:Scatterplots-i-surveyer"

\end_inset


\end_layout

\begin_layout Paragraph
a)
\end_layout

\begin_layout Standard
Som nämnts tidigare är ett (delikat) problem i surveyer ofta att antalet
 observationer är mycket stort.
 Det gör att scatterplots ofta kan bli helt övertäckta med datapunkter vilket
 gör det svårt att se resultaten.
 Nedan är ett exempel på scatterplot där det är mycket svårt att se fördelningen
 då punkterna ligger 
\begin_inset Quotes eld
\end_inset

ovanpå
\begin_inset Quotes erd
\end_inset

 varandra.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=TRUE, fig.width=4, fig.height=4.5, fig.align='center', eval=TRUE>>=
\end_layout

\begin_layout Plain Layout

plot(svy2010$fathAge, svy2010$mothAge)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Vi ska nu pröva olika former av alternativ för surveydata.
\end_layout

\begin_layout Standard
Dessa plottar kan visas på olika sätt.
 Dels kan vikterna tas med i beaktande och explicit användas i en scatterplot.
 Detta görs med funktionen 
\family typewriter
svyplot()
\family default
 på följande sätt.
 Nedan skappas en 
\begin_inset Quotes eld
\end_inset

bubbleplot
\begin_inset Quotes erd
\end_inset

 men där storleken på bublorna är baserade på vikterna i datamaterialet.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=TRUE, fig.width=4.5, fig.height=4.7, fig.align='center', eval=TRUE>>=
\end_layout

\begin_layout Plain Layout

svyplot(LARGEF92~SMALLF92,design=agSTRAT, style="bubble",xlab="Small farms",
 ylab="Large farms") 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nedan är exempel på andra metoder för att producera plottar för surveydata
 (eller generellt stora data).
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=TRUE, fig.width=4, fig.height=4, fig.align='center', eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

svyplot(fathAge~mothAge, design = svy2010design, style="transparent", pch=19,
 alpha=c(0,.1)) 
\end_layout

\begin_layout Plain Layout

svyplot(fathAge~mothAge, design = svy2010design, style="hex") 
\end_layout

\begin_layout Plain Layout

svyplot(fathAge~mothAge, design = svy2010design, style="grayhex") 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Skapa plottarna ovan och inkludera dem i din rapport.
 Gör dem så snygga du kan (se hjälpen) med labels på x- och y-axeln.
 Vilka plottar föredrar du och varför?
\end_layout

\begin_layout Paragraph
b)
\end_layout

\begin_layout Standard
Till sist ska vi pröva att skapa så kallade 
\begin_inset Quotes eld
\end_inset

conditioning plots
\begin_inset Quotes erd
\end_inset

 d.v.s.
 scatterplots för olika grupper.
 Dessa plots påminner om funktionerna ovan, dock med tillägget 
\family typewriter
|
\family default
 som indikerar för vilken kategorisk variabel ska plottarna delas upp.
 Nedan är ett exempel.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=TRUE, fig.width=4.2, fig.height=3, fig.align='center', eval=TRUE>>=
\end_layout

\begin_layout Plain Layout

svycoplot(fathAge~mothAge | Valdeltagande, design = svy2010design, style="hex")
 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Välj ut en variabel och skapa en så snygg conditioning plot du kan.
 Använd hjälpen för att se hur kan styra olika delar.
\end_layout

\begin_layout Subsection
Surveyer och 
\family typewriter
ggplot2
\end_layout

\begin_layout Standard
Den grafik ovan som kan produceras med surveypaketet är väl genomtänkt,
 men knappast särskilt vacker i sitt utförande.
 Vill vi istället skapa grafik för surveyer med 
\family typewriter
ggplot2
\family default
 krävs något mer arbete.
 I slutet av denna laboration finns en repetition av hur vi skapar grafik
 med 
\family typewriter
ggplot2
\family default
.
\end_layout

\begin_layout Standard
Det första steget vi behöver ta är att vi behöver plocka ut surveyvikterna
 och surveydatan för att skapa en 
\family typewriter
data.frame
\family default
 vi kan använda med 
\family typewriter
ggplot2
\family default
.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=TRUE, fig.width=4.2, fig.height=3, fig.align='center', eval=TRUE>>=
\end_layout

\begin_layout Plain Layout

my_df <- cbind(agSTRAT$variables, data.frame(w=weights(agSTRAT)))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nu har vis kapat ett dataset med vikter.
 Vi kan nu skapa grafik på vanligt sätt i 
\family typewriter
ggplot2
\family default
, men vi anger argumentet 
\family typewriter
weight
\family default
 i 
\family typewriter
aestetic
\family default
 för 
\family typewriter
ggplot2
\family default
.
 Pröva koden nedan.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=TRUE, fig.width=4.2, fig.height=3, fig.align='center', eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

ggplot(data=my_df) + geom_point(aes(x = LARGEF92, y = SMALLF92, size=w,
 color=REGION))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

ggplot(data=my_df) +      
\end_layout

\begin_layout Plain Layout

  stat_bin2d(aes(x = LARGEF92, y = SMALLF92, weight=w),
\end_layout

\begin_layout Plain Layout

             size = .5, bins = 20, alpha = 0.4)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

ggplot(data=my_df) +  aes(x = SMALLF92, weight=w) + geom_histogram()
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

ggplot(data=my_df) +  aes(y = SMALLF92, x=REGION, weight=w) + geom_boxplot()
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

ggplot(data=my_df) +  aes(x = REGION, weight=w) + geom_bar() 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Använd nu 
\family typewriter
ggplot2
\family default
 och visualisera datamaterialet Survey 2010 med 
\family typewriter
ggplot
\family default
s motsvarigheter till grafiken i 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Kategoriska-variabler"

\end_inset

 och 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Scatterplots-i-surveyer"

\end_inset

 ovan.
\end_layout

\begin_layout Section
Surveyer och kartor
\end_layout

\begin_layout Paragraph
a)
\end_layout

\begin_layout Standard
I surveyer och liknande undersökningar är det inte sällsynt att det finns
 ett intresse av producera kartor av det material som samlas in.
 Vi kommer därför gå igenom den mest grundläggande funktionalitet för att
 skapa kartor.
 
\end_layout

\begin_layout Standard
För att skapa kartor behöver vi en så kallad shapefil.
 Dessa innehåller geografisk data i vektoriserat format vilket vi kan läsa
 in och modifiera i R.
 Vektoriserade geografiska data innebär att vår data representeras som punkter,
 vektorer eller polygoner.
 Mer information om shapefiler finns 
\series bold
\color blue

\begin_inset CommandInset href
LatexCommand href
name "[här]"
target "http://en.wikipedia.org/wiki/Shapefile"

\end_inset


\series default
\color inherit
 och om vektoriserad GIS-information finns 
\series bold
\color blue

\begin_inset CommandInset href
LatexCommand href
name "[här]"
target "http://sv.wikipedia.org/wiki/Geografiskt_informationssystem#RasterGIS_och_vektorGIS"

\end_inset


\series default
\color inherit
.
\end_layout

\begin_layout Standard
Shapefiler som är aktuella för just era problem beror på detaljeringsgrad,
 men församlingsgränser eller kommunindelningsgränser av intresse finns
 på de flesta kommuner och länsstyrelser.
 Ofta finns informationen att tillgå gratis som shapefiler.
 Exempelvis tillhandahåller valmyndigheten samtliga valdistrikt i form av
 en shapefil.
 
\end_layout

\begin_layout Standard
Läs in shapefilen med hjälp av 
\family typewriter
readShapePoly()
\family default
 på följande sätt i R.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

library(maptools)
\end_layout

\begin_layout Plain Layout

swe_county <- readShapePoly("Lan_SCB/Lan_SCB_07.shp") 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Vi har nu läst in shapefilen i R.
 Vi kan få en snabb beskrivning av våra geografiska data med 
\family typewriter
summary()
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

class(swe_county)
\end_layout

\begin_layout Plain Layout

summary(swe_county)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Som ett första steg kan vi också skapa en snabb grafisk plot baserat på
 vårt spatiala objekt.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<fig.height=4, fig.width=4, fig.align='center'>>=
\end_layout

\begin_layout Plain Layout

plot(swe_county)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nu har vi läst in och studerat vår första shapefil!
\end_layout

\begin_layout Paragraph
b)
\end_layout

\begin_layout Standard
Vi ska nu skapa statistik på karta baserat på surveyestimat.
 Det första steget är att skapa den variabel vi vill beskriva med kartan.
 Jag vill analysera andelen som vill skära ned på den offentliga sektorn
 i olika områden.
 Först skapar jag variabeln nedan, observera att vårt dataset ligger i designobj
ektet och har namnet 
\family typewriter
variables
\family default
.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=TRUE, fig.height=4, fig.width=4, fig.align='center', eval=TRUE>>=
\end_layout

\begin_layout Plain Layout

svy2010design$variables$minskaOff <- as.numeric(svy2010$FR28_1 %in% c("Ganska
 bra", "Mycket bra"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nästa steg är att skapa skattningar för respektive län, detta görs med 
\family typewriter
svyby()
\family default
.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=TRUE, fig.height=4, fig.width=4, fig.align='center', eval=TRUE>>=
\end_layout

\begin_layout Plain Layout

minskaOffEst <- svyby(~minskaOff, by=~LKF, design=svy2010design,  svymean)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Precis som surveyobjektet har en egen 
\family typewriter
data.frame
\family default
 i surveyobjektet finns vårt dataset (kopplade till varje polygon - i detta
 fall kommun) som en egen 
\family typewriter
data.frame
\family default
 i vårt spatiala objekt.
 Vi kan komma åt datat med 
\family typewriter
@
\family default
 på följande sätt:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

head(swe_county@data)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Denna 
\family typewriter
data.frame
\family default
 kan vi hantera precis som vanliga 
\family typewriter
data.frame
\family default
s.
 Vill vi lägga på data använder vi därför 
\family typewriter
merge()
\family default
 och lägger till våra data om kor till respektive kommun.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

swe_county@data <- merge(swe_county@data, minskaOffEst, by.x="LNKOD", by.y="LKF")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nu har vi lagt till våra estimat och kan använda 
\family typewriter
spplot()
\family default
 för att skapa en karta baserad på vår statistik.
 Pröva följande kod.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<fig.height=5, fig.width=3, fig.align='center'>>=
\end_layout

\begin_layout Plain Layout

spplot(swe_county, "minskaOff")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Vi har nu gjort en karta över andelen som vill minska den offentliga sektorn
 i olika landsting.
 
\end_layout

\begin_layout Standard
Välj nu en annan fråga i enkäten och gör en så snygg karta som möjligt.
 Gör också en mindre analys kring de geografiska skillnaderna ni ser.
 
\end_layout

\begin_layout Paragraph
c)
\end_layout

\begin_layout Standard
Som ni kanske upptäckt är ett problem med estimaten att de är olika säkra
 för olika län.
 Exempelvis i Stockholms län finns många observationer medan på Gotland
 är antalet observationer mycke mindre.
\end_layout

\begin_layout Standard
Det som då kan vara av intresse är att kombinera län till större områden.
 Det finns i Survey 2000 så kallade riksområden som vi kan använda.
\end_layout

\begin_layout Standard
Lägg till variabeln 
\family typewriter
romr
\family default
 i det spatiala objektets dataset på liknande sätt som ovan.
 Efter att det är gjort kan vi använda funktionen 
\family typewriter
unionSpatialPolygons
\family default
 för att lägga samman länsområdena (polygoner) till större områden.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=FALSE, fig.height=4, fig.width=4, fig.align='center', eval=TRUE>>=
\end_layout

\begin_layout Plain Layout

swe_county@data$romr <- 0 
\end_layout

\begin_layout Plain Layout

swe_county@data$romr[swe_county@data$LNKOD %in% c("01")] <- 1 
\end_layout

\begin_layout Plain Layout

swe_county@data$romr[swe_county@data$LNKOD %in% c("05","04","18","19","03")]
 <- 2
\end_layout

\begin_layout Plain Layout

swe_county@data$romr[swe_county@data$LNKOD %in% c("06","07","08","09")]
 <- 3 
\end_layout

\begin_layout Plain Layout

swe_county@data$romr[swe_county@data$LNKOD %in% c("12","10")] <- 4
\end_layout

\begin_layout Plain Layout

swe_county@data$romr[swe_county@data$LNKOD %in% c("13","14")] <- 5
\end_layout

\begin_layout Plain Layout

swe_county@data$romr[swe_county@data$LNKOD %in% c("17","20","21")] <- 6
\end_layout

\begin_layout Plain Layout

swe_county@data$romr[swe_county@data$LNKOD %in% c("23","22")] <- 7
\end_layout

\begin_layout Plain Layout

swe_county@data$romr[swe_county@data$LNKOD %in% c("24","25")] <- 8
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=TRUE, fig.height=4, fig.width=4, fig.align='center', eval=FALSE, comment=''>
>=
\end_layout

\begin_layout Plain Layout

swe_romr <- unionSpatialPolygons(SpP = swe_county,IDs = swe_county@data$romr)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
På detta sätt får vi ett nytt spatialt objekt med de nya geografiska områdena:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=FALSE, fig.height=4, fig.width=4, fig.align='center', eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

plot(swe_romr)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
När vi lägger ihop olika polygoner i en karta kommer objektet att reduceras
 till ett 
\family typewriter
SpatialPolygons
\family default
-objekt istället för ett objekt av klassen 
\family typewriter
SpatialPolygonsDataFrame
\family default
 (som krävs för att visualisera data).
 Vi behöver därför aggregera upp data på den nya indelningsnivån och skapa
 ett objekt av klassen 
\family typewriter
SpatialPolygonsDataFrame
\family default
.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=TRUE, fig.height=4, fig.width=4, fig.align='center', eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

aggr_data <- aggregate(x=swe_romr@data$BEF05,by=list(swe_romr@data$romr),FUN=sum
) 
\end_layout

\begin_layout Plain Layout

names(aggData) <- c("romr", "BEF05") 
\end_layout

\begin_layout Plain Layout

swe_romr <- SpatialPolygonsDataFrame(Sr=swe_romr, data=aggr_data)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Med detta objekt kan vi sedan visualisera data med de nya områderna med
 hjälp av följande kod:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<echo=TRUE, fig.height=4, fig.width=4, fig.align='center', eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

spplot(swe_romr, "BEF05")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Använd dessa nya större områden för att igen skapa en karta baserad på dessa
 områden med statistik för den variabel du använt.
 Använd 
\family typewriter
svyby()
\family default
 för att skatta din variabel i olika riksområden.
\end_layout

\begin_layout Standard
Gör en så snygg karta du kan.
 Skiljer sig slutsatsen från din tidigare slutsats på länsnivå? 
\end_layout

\begin_layout Paragraph
d)
\end_layout

\begin_layout Standard
Som ett sista steg ska vi plocka ut endast delar av en karta för att skapa
 kartor över mindre delområden.
 Börja med att läsa in shapefilen som innehåller kommungränser.
 
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

swe_municip <- readShapePoly("Kommun_SCB/Kommun_SCB_07.shp") 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Som ett sista steg ska vi plocka ut endast delar av en karta för att skapa
 kartor över mindre delområden.
 Detta blir extra intressant när vi visualisera data på kartor för lokala
 surveyer (exempelvis i Östergötland).
\end_layout

\begin_layout Standard
Vi ska nu istället plocka ut en delmängd av dessa kommuner.
 Än en gång använder vi länskoderna vi skapat.
 För att plocka ut ett visst antal kommuner gör vi precis som för att indexera
 rader i en data.frame i R.
 För att välja ut länet 
\begin_inset Quotes eld
\end_inset


\family typewriter
01
\family default

\begin_inset Quotes erd
\end_inset

 (Stockholms län) används följande kod.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

spatial_sthlm <- swe_municip[substr(swe_municip$KNKOD,1,2)=="01",]
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Studera hur vårt det spatiala objekt ser ut med 
\family typewriter
plot()
\family default
.
\end_layout

\begin_layout Subsection
Skapa kartor med 
\family typewriter
ggmap
\end_layout

\begin_layout Standard
Vi har hittils arbetat med shapefiler som innehåller spatiala data.
 Inte sällan vill vi också sätta våra spatiala data i relation till kartor.
 Särskilt om vi har data som är geotaggade, d.v.s.
 innehåller koordinater (ex.
 adresse) kan det vara av intresse att visualisera dessa på en karta.
 För att använda kartor i R är det enklaste att använda oss av de kartor
 som finns öppet tillgängliga på webben, som Google Maps, Open Street Map
 m.fl.
 Med paketet 
\family typewriter
ggmap
\family default
 kan vi enkelt läsa in en godtycklig kvadratisk karta.
\end_layout

\begin_layout Standard
Vi börjar med att läsa in paketet 
\family typewriter
ggmap
\family default
 och skapar en första karta över Linköping på följande sätt.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<fig.height=4, fig.width=4, fig.align='center'>>=
\end_layout

\begin_layout Plain Layout

library(ggmap)
\end_layout

\begin_layout Plain Layout

qmap("Linkoping")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Som framgår ovan så får vi dels upp en karta över Linköping (på en relativt
 hög upplösning) och dels information om att vi använt Google Maps samt
 information om vilka villkor som gäller för användadet av kartan.
 Framöver kommer denna extra information döljas.
 Vill vi zomma in eller ut använder vi argumentet 
\family typewriter
zoom
\family default
.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

qmap("Linkoping", zoom=14)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<<echo=FALSE, eval=TRUE, fig.height=4, fig.width=4, fig.align='center'>>=
\end_layout

\begin_layout Plain Layout

suppressMessages(qmap("Linkoping", zoom=14))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Vi kan också använda Google Maps för att för att få ut koordinater för enskilda
 platser med 
\family typewriter
geocode()
\family default
.
 Av hänsyn till de personer som deltar i en undersökning vill vi sällan
 skriva ut exakta positioner för de som svarat.
 Om vi använder postadresser kan vi dock visualisera surveyer på kartor
 utan att avslöja de riktiga adresserna för de som svarat.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

linkpg_uni <- unlist(geocode("Linkopings Universitet"))
\end_layout

\begin_layout Plain Layout

linkpg_uni
\end_layout

\begin_layout Plain Layout

geocode("11732 Stockholm")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<<echo=FALSE, eval=TRUE, fig.height=4, fig.width=4, fig.align='center'>>=
\end_layout

\begin_layout Plain Layout

suppressMessages(linkpg_uni <- unlist(geocode("Linkopings Universitet")))
\end_layout

\begin_layout Plain Layout

linkpg_uni
\end_layout

\begin_layout Plain Layout

geocode("11732 Stockholm")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Då 
\family typewriter
qmap()
\family default
 använder sig av koordinater kan vi också ange koordinater för att skapa
 kartor.
 Med argumentet maptype van vi välja mellan google maps kartor 
\begin_inset Quotes eld
\end_inset


\family typewriter
roadmap
\family default

\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset


\family typewriter
satellite
\family default

\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset


\family typewriter
hybrid
\family default

\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset


\family typewriter
terrain
\family default

\begin_inset Quotes erd
\end_inset

.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

qmap(location=linkpg_uni, zoom=14, maptype="roadmap")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<<echo=FALSE, eval=TRUE, fig.height=4, fig.width=4, fig.align='center'>>=
\end_layout

\begin_layout Plain Layout

suppressMessages(qmap(location=linkpg_uni, zoom=14, maptype="roadmap"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Vi kan också välja svartvita kartor med argumentet 
\family typewriter
color
\family default
.
 Precis som i 
\family typewriter
ggplot2
\family default
 kan vi spara våra kartobjekt för att skriva ut dem senare.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

karta <- qmap(linkpg_uni, zoom = 14, maptype="satellite", color="bw")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<<echo=FALSE, eval=TRUE, fig.height=4, fig.width=4, fig.align='center'>>=
\end_layout

\begin_layout Plain Layout

karta <- suppressMessages(qmap(linkpg_uni, zoom = 14, maptype="satellite",
 color="bw"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Det finns fyra olika kartsystem som går att använda från 
\family typewriter
ggmap
\family default
.
 Vill vi använda något annat kartsystem använder vi 
\family typewriter
source
\family default
.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<fig.height=4, fig.width=4, fig.align='center'>>=
\end_layout

\begin_layout Plain Layout

qmap(linkpg_uni, zoom = 14, source = "stamen", maptype = "toner")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nu har vi skapat kartor i R.
 Nästa steg är att kombinera kartor och spatiala data.
\end_layout

\begin_layout Subsection
Visualisera geotaggad data på karta
\end_layout

\begin_layout Standard
Vi har tidigare sett hur vi kan få ut longitud och latitud med 
\family typewriter
geocode()
\family default
.
 Har vi väl denna geotaggade information är det enkelt att visualisera materiale
t på en karta.
 Att visualisera data på kartor följer i princip samma grundstruktur för
 att visualisera data med två kontinuerliga variabler (longitud och latitud).
 Detta framgår tydligt om vi använder följande kod.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<fig.height=4, fig.width=4, fig.align='center', eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

ggmap(paris, extent = "normal")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Med följande kod slumpas ett antal datapunkter ut kring Linköping.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

set.seed(1984)
\end_layout

\begin_layout Plain Layout

linkpg_map <- qmap("Linkoping", color="bw") 
\end_layout

\begin_layout Plain Layout

df <- 
\end_layout

\begin_layout Plain Layout

  data.frame(
\end_layout

\begin_layout Plain Layout

    lon = jitter(rep(15.6, 50), amount = .15), 
\end_layout

\begin_layout Plain Layout

    lat = jitter(rep(58.4, 50), amount = .152),
\end_layout

\begin_layout Plain Layout

    event = sample(c("Kometnedslag", "Olycka", "Polis"), size = 50, replace
 = TRUE) 
\end_layout

\begin_layout Plain Layout

) 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<<echo=FALSE>>=
\end_layout

\begin_layout Plain Layout

set.seed(1984)
\end_layout

\begin_layout Plain Layout

linkpg_map <- qmap("Linkoping", color="bw") 
\end_layout

\begin_layout Plain Layout

df <- 
\end_layout

\begin_layout Plain Layout

  data.frame(
\end_layout

\begin_layout Plain Layout

    lon = jitter(rep(15.6, 50), amount = .15), 
\end_layout

\begin_layout Plain Layout

    lat = jitter(rep(58.4, 50), amount = .152),
\end_layout

\begin_layout Plain Layout

    event = sample(c("Kometnedslag", "Olycka", "Polis"), size = 50, replace
 = TRUE) 
\end_layout

\begin_layout Plain Layout

) 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Vi kan använda samtliga funktioner i 
\family typewriter
ggplot2
\family default
.
 Nedan är motsvarigheten till en scatterplot.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<fig.height=4, fig.width=4, fig.align='center'>>=
\end_layout

\begin_layout Plain Layout

linkpg_map +   
\end_layout

\begin_layout Plain Layout

  geom_point(aes(x = lon, y = lat), data = df)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Vill vi visualisera olika kategorier kan vi använde 
\family typewriter
aes
\family default
tetics i 
\family typewriter
ggplot2
\family default
.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<fig.height=4, fig.width=4, fig.align='center'>>=
\end_layout

\begin_layout Plain Layout

linkpg_map +   
\end_layout

\begin_layout Plain Layout

  geom_point(aes(x = lon, y = lat, colour = event, size = event),      
         data = df)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Vill vi visualisera frekvenser efter två kontinuerliga variabler finns dels
 
\family typewriter
stat_bin2d
\family default
 och 
\family typewriter
stat_density2d
\family default
 tillgängligt i 
\family typewriter
ggplot2
\family default
.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<fig.height=4, fig.width=4, fig.align='center'>>=
\end_layout

\begin_layout Plain Layout

linkpg_map +   
\end_layout

\begin_layout Plain Layout

  stat_bin2d(aes(x = lon, y = lat),
\end_layout

\begin_layout Plain Layout

             size = .5, bins = 20, alpha = 0.4, data = df)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

<<fig.height=4, fig.width=4, fig.align='center'>>=
\end_layout

\begin_layout Plain Layout

linkpg_map +   
\end_layout

\begin_layout Plain Layout

  stat_density2d(aes(x = lon, y = lat), 
\end_layout

\begin_layout Plain Layout

                 alpha = 0.2, size = 1, bins = 4, 
\end_layout

\begin_layout Plain Layout

                 data = df, geom = "polygon")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Då det i grunden är samma princip för att visualisera data på karta som
 att visualisera scatterplots kan vi använda oss av vikter i 
\family typewriter
ggplot2
\family default
 som vi gjorde tidigare.
 Pröva att tilldela de påhittade punkterna i df olika vikter och visualisera
 de nya viktade punkterna på kartan i en plot.
\end_layout

\begin_layout Subsection
Kombinera spatiala data med olika projektioner/geografiska referenssystem
\end_layout

\begin_layout Standard
När vi har många olika typer av data vi vill kombinera på samma karta måste
 de ha samma projektion och samma kooridinatsystem.
 En bra och kort introduktion till kartprojektioner hittar du 
\series bold
\color blue

\begin_inset CommandInset href
LatexCommand href
name "[här]"
target "http://www.lantmateriet.se/Kartor-och-geografisk-information/GPS-och-geodetisk-matning/Om-geodesi/Kartprojektioner/Kartprojektionens-grunder/"

\end_inset


\series default
\color inherit
.
 
\end_layout

\begin_layout Standard
Alla data vi vill kombinera behöver vi känna till vilket geografiskt referenssys
tem som används.
 Exempelvis Google Maps använder sig av formatet EPSG 4326 (vilket vi kallar
 longitud och latitud).
 För att kolla upp vilket EPSG-nummer ett format kan vi använda 
\series bold
\color blue

\begin_inset CommandInset href
LatexCommand href
name "http://spatialreference.org/"
target "http://spatialreference.org/"

\end_inset


\series default
\color inherit
.
\end_layout

\begin_layout Standard
Vi ska nu pröva att visualisera våra kommungränser vi läst in i shapefilen
 ovan på Google Maps.
\end_layout

\begin_layout Enumerate
Det första steget vi måste ta är att vi måste konvertera våra kommunkartor
 till EPSG 4326 för att visualisera dem med Google Maps.
 Vi börjar med att tillskriva vår shapefil det EPSG-format filen har.
 (Filen använder SWEREF 99 TM - slå upp det på 
\series bold
\color blue

\begin_inset CommandInset href
LatexCommand href
name "http://spatialreference.org/"
target "http://spatialreference.org/"

\end_inset


\series default
\color inherit
 så framgår EPSG-koden).
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

proj4string(swe_municip) <- CRS("+init=epsg:3006")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vi har nu tillskrivit vårt spatiala objekt ett geografiskt referenssystem.
 Nästa steg är att konvertera den till longitud och latitud.
 För att konvertera mellan geografiska referenssystem behövs rgdal-paketet.
 Vi vet att EPSG-koden för detta är 4326 och använder 
\family typewriter
spTransform()
\family default
 för att göra konverteringen på följande sätt.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

library(rgdal)
\end_layout

\begin_layout Plain Layout

swe_municip_4326 <- spTransform(swe_municip, CRS("+init=epsg:4326"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Nu har vi konverterat vår shapefil till rätt format och kan visualisera
 våra data på en karta.
 För att 
\family typewriter
ggplot2
\family default
 ska kunna läsa ett spatialt polygonobjekt behöver vi först göra om det
 spatala objektet till en 
\family typewriter
data.frame
\family default
 som ggplot kan använda med
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

data <- fortify(swe_municip_4326) 
\end_layout

\begin_layout Plain Layout

linkpg_large <- qmap("Linkoping", zoom = 6, maptype = "terrain")
\end_layout

\begin_layout Plain Layout

linkpg_large +    geom_polygon(aes(x = long, y = lat, group = group), data
 = data,                colour = "white", fill = "blue", alpha = .2, size
 = .3)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
På detta sätt kan vi visualiser de flesta spatiala datatyper på ett enkelt
 och snabbt sätt.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "ReferencesSurveyLabs"
options "bibtotoc,elsarticle-harv"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Bilaga: Repetition av grunderna i 
\family typewriter
ggplot2
\end_layout

\begin_layout Standard
Paketet 
\family typewriter
ggplot2
\family default
 skiljer sig från den grundläggande grafikfunktionaliteten som finns implementer
at i R.
 Paketet bygger på vad som brukar kallas 
\begin_inset Quotes eld
\end_inset

The grammar of graphics
\begin_inset Quotes erd
\end_inset

 (därav 
\family typewriter
gg
\family default
 i 
\family typewriter
ggplot2
\family default
) och är ett försök till ett formellt språk för att uttrycka hur en visualiserin
g ska se ut.
 Mer teori bakom denna gramatik går att finna i 
\begin_inset Quotes eld
\end_inset

The grammar of graphics
\begin_inset Quotes erd
\end_inset

 och är grunden bakom exempelvis SPSS grafiksystem.
 Genom att ha en grundläggande förståelse för denna grammatik kan vi enkelt
 och snabbt skapa mycket komplicerade visualiseringar.
\end_layout

\begin_layout Standard
I R:s basgrafiksystem kunde man se grafikfunktionaliteten lite som ett papper
 vi ritar på.
 Vi ritar initialt upp vår graf och kan sedan lägga till/rita 
\begin_inset Quotes eld
\end_inset

ovanpå
\begin_inset Quotes erd
\end_inset

 det befintliga pappret.
 
\family typewriter
ggplot
\family default
 är annorlunda.
 Med 
\family typewriter
ggplot
\family default
 skapar vi ett grafikobjekt och vi kan lägga till bit för bit av grafen
 för att när vi sedan är klar med vår graf visualisera den.
 Det gör det enklare att bygga upp komplicerade grafer utan att behöva använda
 särskilt mycket kod.
\end_layout

\begin_layout Subsection
Grunden i 
\family typewriter
ggplot2
\end_layout

\begin_layout Standard
Till skillnad från basgrafiken utgår ggplot 
\series bold
alltid
\series default
 från en 
\family typewriter
data.frame
\family default
.
 Baserat på denna data.frame skapas sedan grafen med två huvudsakliga komponenter
: 
\end_layout

\begin_layout Itemize

\family typewriter
aes
\family default
 (aestetic) som handlar om utseendet på grafen, färger, former m.m.
\end_layout

\begin_layout Itemize

\family typewriter
geom
\family default
 (geometrics) som beskriver vilken typ av graf vi vill ha (bar, line, points)
\end_layout

\begin_layout Standard
Vi lägger sedan till dessa komponenter till vår graf och 
\family typewriter
data.frame
\family default
.
\end_layout

\begin_layout Standard
När det gäller de olika geometriska argumenten, d.v.s.
 de olika typer av grafer som går att skapa, finns det ett mycket stor antal
 vi kan använda oss av.
 Några exempel är:
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\series bold
geom
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Beskrivning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
geom_point
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Scatterplot
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
geom_line
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Line graph
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
geom_bar
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Barplot
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
geom_boxplot
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Boxplot
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
geom_histogram
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Histogram
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
Exakt hur dessa geometriska figurer ska se ut styrs sedan med 
\family typewriter
aes
\family default
.
 Nedan finns några exempel:
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\series bold
aes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Beskrivning
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
x
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
x-axel
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
y
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
y-axel
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
size
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
storlek
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
col
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
färg
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
shape
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
form
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align center
De enskilda geometriska figurerna kan i sin tur ha ett antal olika aestetics.
 Nedan finns lite exempel.
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
\series bold
geom
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Specifika aestetics
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
geom_points
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
point 
\family typewriter
shape
\family default
, point 
\family typewriter
size
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
geom_line
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
linetype
\family default
, line 
\family typewriter
size
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
geom_bar
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
y 
\family typewriter
min
\family default
, y 
\family typewriter
max
\family default
, 
\family typewriter
fill
\family default
 color, 
\family typewriter
outline
\family default
 color
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
Med dessa verktyg har vi en grund för att bygga upp ett mycket stort antal
 visualiseringar.
\end_layout

\begin_layout Subsection
Skapa en ggplot (linje eller scatter)
\end_layout

\begin_layout Enumerate
Vi börjar med att läsa in the datamaterialet 
\family typewriter
Nile
\family default
.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE>>=
\end_layout

\begin_layout Plain Layout

library(ggplot2)
\end_layout

\begin_layout Plain Layout

data(Nile)
\end_layout

\begin_layout Plain Layout

Nile <- as.data.frame(Nile) 
\end_layout

\begin_layout Plain Layout

colnames(Nile) <- "level"
\end_layout

\begin_layout Plain Layout

Nile$years <- 1871:1970
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
För att skapa en 
\family typewriter
ggplot
\family default
 börjar vi med att skapa grunden för plotten med funktionen 
\family typewriter
ggplot()
\family default
.
 Nedan är ett exempel på att skapa en 
\family typewriter
ggplot
\family default
 med 
\family typewriter
Nile
\family default
, sedan lägger vi till att 
\family typewriter
x
\family default
 ska utgöras av variabeln 
\family typewriter
years
\family default
 och 
\family typewriter
level
\family default
.
 Sedan lägger vi till att plotten ska utgöras av punkter.
 Vi sparar grafen som variabeln 
\family typewriter
p
\family default
.
 För att skapa grafen tittar vi bara på 
\family typewriter
p
\family default
:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE, fig.height=3, fig.width=4, fig.align='center'>>=
\end_layout

\begin_layout Plain Layout

p <- ggplot(data=Nile) + aes(x=years, y=level) + geom_point()
\end_layout

\begin_layout Plain Layout

p
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vill vi ändra till en linjegraf (vilket känns bättre) här byter vi bara
 ut geometrin:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

p <- ggplot(data=Nile) + aes(x=years, y=level) + geom_line()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vill vi lägga till både punkter och linjer i samma graf kan vi bara ta 
\family typewriter
p
\family default
 och lägga till punkter.
 Här blir det tydligt hur vi i 
\family typewriter
ggplot
\family default
 lägger till lager på lager och sedan producerar en visualisering:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

p <- p + geom_point()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
På samma sätt kan vi också lägga till rubriker och axelettiketter:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

p <- p + xlab("Years") + ylab("Water level") + ggtitle("Nile series")
\end_layout

\begin_layout Plain Layout

Nile$period <- "- 1900" Nile$period[Nile$years >= 1900] <- "1900 - 1945"
 Nile$period[Nile$years > 1945] <- "1945 + " Nile$period <- as.factor(Nile$period
)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Enklare modifikationer av ett 
\family typewriter
ggplot
\family default
-objekt
\end_layout

\begin_layout Enumerate
Vill vi ändra färg och form på olika delar i en graf behöver vi ange exakt
 var dessa förändringar ska ske.
 
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

p <- ggplot(data=Nile) + aes(x=years, y=level) + geom_line(color="red",
 size=3) + geom_point(color="blue", size=4)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Om vi nu vill förtydliga vissa delar av grafen med olika färger eller använder
 vi 
\family typewriter
aes
\family default
 i den del av grafen vi vill ändra.
 Först ska vi skapa en ny faktorvariabel vi vill visualisera.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

Nile$period <- "- 1900" 
\end_layout

\begin_layout Plain Layout

Nile$period[Nile$years >= 1900] <- "1900 - 1945"
\end_layout

\begin_layout Plain Layout

Nile$period[Nile$years > 1945] <- "1945 + " 
\end_layout

\begin_layout Plain Layout

Nile$period <- as.factor(Nile$period)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vill vi nu exempelvis lyfta in visualiseringen i linjerna måste vi lägga
 
\family typewriter
aes
\family default
 där.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

p <- ggplot(data=Nile) + aes(x=years, y=level) + geom_line(aes(color=period))
 + geom_point()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vill vi istället modifiera punkterna lägger vi till det i geom_point().
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

p <- ggplot(data=Nile) + aes(x=years, y=level) + geom_line() + geom_point(aes(co
lor=period))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vill vi lägga det i hela grafen kan vi lägga till färgen i den huvudsakliga
 styrningen av aestetics i grafen.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

p <- ggplot(data=Nile) + aes(x=years, y=level, color=period) + geom_line()
 + geom_point()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Baserat på graferna ovan pröva att göra följande förändringar:
\end_layout

\begin_deeper
\begin_layout Enumerate
Ändra typ av linje i grafen [
\series bold
Tips!
\series default
 
\family typewriter
linetype
\family default
]
\end_layout

\begin_layout Enumerate
Ändra typ av punkter i grafen [
\series bold
Tips!
\series default
 
\family typewriter
shape
\family default
]
\end_layout

\begin_layout Enumerate
Gör punkterna transparaenta [
\series bold
Tips!
\series default
 
\family typewriter
alpha
\family default
]
\end_layout

\end_deeper
\begin_layout Subsection
Barplot, histogram och boxplot
\end_layout

\begin_layout Standard
För att pröva dessa diagram använder vi oss av datamaterialet mtcars.
 Vi börjar med att läsa in datamaterialet mtcars.
 För att få mer information om detta datamaterial, använd 
\family typewriter
?mtcars
\family default
.
 Vi gör också om
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

data(mtcars)
\end_layout

\begin_layout Plain Layout

mtcars$cyl <- as.factor(mtcars$cyl)
\end_layout

\begin_layout Plain Layout

mtcars$gear <- as.factor(mtcars$gear)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Till skillnad från basgrafiken använder vi inte olika funktioner för olika
 plottar utan vi använder bara olika 
\family typewriter
geoms
\family default
.
 
\end_layout

\begin_layout Enumerate
Vill vi exempelvis skapa ett stapeldiagram anger vi bara en axel och ett
 annat geom, men i övrigt är det inge större skillnad mot en linjegraf:
 
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE, fig.height=4, fig.width=4, fig.align='center'>>=
\end_layout

\begin_layout Plain Layout

p <- ggplot(data=mtcars) + aes(x=cyl) + geom_bar()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vi kan också enkelt lägga till funktionen 
\family typewriter
coord_flip()
\family default
 för att skapa ett liggande stapelidagram istälet för ett stående.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

p + coord_flip()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Skillnaden ligger i att det finns lite andra aestetics för stapeldiagram
 än för övriga diagram som 
\family typewriter
fill
\family default
.
 
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

p <- ggplot(data=mtcars) + aes(x=cyl) + geom_bar(fill="darkblue", colour="red")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
För att skapa stapeldiagram med flera grupper behöver vi dels lägga till
 en till variabel som indikerar att vi vill ha ex.
 olika färger för olika grupper samt ange hur dessa diagram ska se ut.
 Pröva exemplen nedan:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

p <- ggplot(data=mtcars) + aes(x=cyl, fill=gear) + geom_bar(position="stack")
\end_layout

\begin_layout Plain Layout

p <- ggplot(data=mtcars) + aes(x=cyl, fill=gear) + geom_bar(position="dodge")
\end_layout

\begin_layout Plain Layout

p + scale_fill_discrete(name="Testa
\backslash
nDetta")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Histogram
\end_layout

\begin_layout Enumerate
Den egentliga skillnaden mellan ett stapeldiagram och ett histogram är bara
 huruvida variabeln är kontinuerlig eller inte.
 Detta gör att för att skapa ett histogram gör vi på exakt samma sätt, men
 vi använder oss av en kontinuerlig variabel:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE,fig.height=4, fig.width=4, fig.align='center'>>=
\end_layout

\begin_layout Plain Layout

p <- ggplot(data=mtcars) + aes(x=mpg) + geom_bar(fill="darkblue", colour="red")
\end_layout

\begin_layout Plain Layout

p
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Sättet ovan är ett sätt att skapa ett histogram.
 Vi kan också använda den specialgjorda geometriska funktionen 
\family typewriter
geom_histogram()
\family default
 om vi vill kunna hantera histogram enklare.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

p <- ggplot(data=mtcars) + aes(x=mpg) + geom_histogram(fill="darkblue",
 colour="red",binwidth=10)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Boxplot
\end_layout

\begin_layout Enumerate
Boxplottar är egentligen en kombination av kontinuerliga variabler.
 Precis som tidigare inleder vi skapa en 
\family typewriter
ggplot
\family default
 med ett datamaterial och definierar vilka variabler vi vill använda.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE, fig.height=4, fig.width=4, fig.align='center'>>=
\end_layout

\begin_layout Plain Layout

p <- ggplot(data=mtcars) + aes(x=cyl, y=mpg) + geom_boxplot()
\end_layout

\begin_layout Plain Layout

p
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vill vi sedan göra förändringar kan vi lägga till det till och från.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

p + coord_flip() + xlab("X") + ggtitle("Hejsan")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Grafiska teman/profiler 
\end_layout

\begin_layout Standard
En av de stora fördelarna med att ggplot skiljer ut själva plotten från
 utseendet är att det är enkelt att skapa strukturer för olika delar av
 en graf som vi vill använda flera gånger.
 En av de bästa exemplen på detta är teman i 
\family typewriter
ggplot
\family default
.
 Ett tema är en uppsättning med inställningar för en grafisk profil som
 vi vill använda i 
\family typewriter
ggplot2
\family default
.
 
\end_layout

\begin_layout Standard
Den stora fördelen är att har vi väl skapat ett tema (vilket kan ta lite
 tid) kan temat läggas till mycket enkelt till samtliga grafer.
 Detta underlättar kopplingen mellan exempelvis grafiska profiler och de
 grafer som produceras, vilket gör att 
\family typewriter
ggplot2
\family default
 är mycket populärt i företag och organisationer.
 Ett exempel på rapport som använder 
\family typewriter
ggplot2
\family default
 genomgående är Pensionsmyndighetens 
\begin_inset CommandInset href
LatexCommand href
name "[Orange rapport]"
target "http://secure.pensionsmyndigheten.se/20895.html"

\end_inset

.
 
\end_layout

\begin_layout Enumerate
Med 
\family typewriter
ggplot2
\family default
 kommer en del teman förinstallerade och precis som allt annat i R är det
 enkelt att bara lägga till den grafiska profilen efter att vi skapat en
 graf.
 
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

p <- ggplot(data=Nile) + aes(x=years, y=level, color=period) + geom_line()
 + geom_point()
\end_layout

\begin_layout Plain Layout

p <- p + theme_bw()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Pröva på liknande sätt följande teman: 
\family typewriter
theme_grey()
\family default
, 
\family typewriter
theme_classic()
\family default
.
\end_layout

\begin_layout Enumerate
Ett tema i 
\family typewriter
ggplot2
\family default
 är bara en funktion, så det är enkelt att titta på hur temat ser ut och
 sedan utgå från ett befintligt tema för att anpassa det till det utseende
 vi själva vill ha.
 Sedan kan detta tema enkelt spridas till alla som arbetar med visualisering
 med 
\family typewriter
ggplot
\family default
.
 
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

theme_bw
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Att ändra den grafiska profilen innebär då bara att ändra denna temafunktion
 (även om det kan innebära en del jobb).
\end_layout

\end_body
\end_document
